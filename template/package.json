{
  "name": "<%= project %>",
  "version": "0.0.0",
  "description": "<%= description %>",<% if (esm) { %>
  "main": "index",
  "module": "index.mjs",<% } else { %>
  "main": "index.js",<% } %>
  "scripts": {
    "lint": "eslint '*.{js,mjs}' 'src/**/*.{js,mjs}'",<% if (tests !== 'none') { %>
    "report-coverage": "nyc report --reporter=lcov > coverage.lcov && codecov",<% } if (tests === 'ava' && buildTarget !== 'none') { %>
    "test": "npm run build && npm run lint && nyc ava",
    "test:only": "npm run build && ava",
    "test:dev": "ava --watch",<% } if (tests === 'ava' && buildTarget === 'none') { %>
    "test": "npm run lint && nyc ava",
    "test:only": "ava",
    "test:dev": "ava --watch",<% } if (tests === 'tapped' && buildTarget !== 'none') { %>
    "test": "npm run build && npm run lint && node <% if (esm) { %>-r esm test/index.mjs<% } else { %>test/index.js<% } %>",
    "test:only": "npm run build && <% if (esm) { %>-r esm test/index.mjs<% } else { %>test/index.js<% } %>",<% } if (tests === 'tapped' && buildTarget === 'none') { %>
    "test": "npm run lint && node <% if (esm) { %>-r esm test/index.mjs<% } else { %>test/index.js<% } %>",
    "test:only": "node <% if (esm) { %>-r esm test/index.mjs<% } else { %>test/index.js<% } %>",<% } if (buildTarget !== 'none') { %>
    "build": "rimraf lib && babel --out-dir lib --ignore __tests__ src", <% } %>
    "version": "npm-auto-version",
    "start": "node ."
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/<%= username %>/<%= project %>.git"
  },
  "keywords": [],
  "files": [
    "src/",
    "index.js",
    "index.mjs",
    "CHANGELOG.md",
    "AUTHORS.md"
  ],
  "author": "<%= name %> (https://github.com/<%= username %>)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/<%= username %>/<%= project %>/issues"
  },
  "homepage": "https://github.com/<%= username %>/<%= project %>",<% if (buildTarget !== 'none') { %>
  "babel": {
    "presets": [
      [
        "env",
        {
          "targets": {
            "node": "<%= buildTarget %>"
          }
        }
      ]
    ]
  },<% } %>
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "ignore": [
      "package.json"
    ],
    "linters": {
      "*.{js,mjs}": [
        "eslint --fix",
        "git add"
      ],
      "*.{js,mjs,json,css}": [
        "prettier --write"
      ]
    }
  },
  "prettier": {
    "printWidth": 100,
    "singleQuote": true,
    "trailingComma": "es5"
  },<% if (esm) { %>
  "esm": {
    "cjs": true
  },<% } %>
  "dependencies": {<% if (esm) { %>
    "esm": "^3.2.7"
  <% } %>},
  "devDependencies": {
    "@w33ble/npm-auto-tools": "*",<% if (tests === 'ava') { %>
    "ava": "^1.2.1",<% } %><% if (tests === 'tapped') { %>
    "tapped": "^0.1.0",<% } %><% if (buildTarget !== 'none') { %>
    "babel-cli": "^6.24.1",
    "babel-preset-env": "^1.6.0",
    "rimraf": "^2.6.1",<% } %>
    "eslint": "^5.15.3",
    "eslint-config-prettier": "^4.1.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-prettier": "^3.0.1",
    "husky": "^1.3.1",
    "lint-staged": "^8.1.4",<% if (airbnb) { %>
    "eslint-config-airbnb": "^17.1.0",
    "eslint-plugin-jsx-a11y": "^6.1.1",
    "eslint-plugin-react": "^7.11.0",<% } if (tests !== 'none') { %>
    "codecov": "^3.1.0",
    "nyc": "^13.3.0",<% } %>
    "prettier": "^1.16.4"
  }
}
